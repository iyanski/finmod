"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/models/generate";
exports.ids = ["pages/api/models/generate"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmodels%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmodels%2Fgenerate.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmodels%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmodels%2Fgenerate.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_models_generate_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/models/generate.ts */ \"(api)/./src/pages/api/models/generate.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_models_generate_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_models_generate_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/models/generate\",\n        pathname: \"/api/models/generate\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_models_generate_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1vZGVscyUyRmdlbmVyYXRlJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZtb2RlbHMlMkZnZW5lcmF0ZS50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUMrRDtBQUMvRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsOERBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLDhEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zpbm1vZC1haS1wbGF0Zm9ybS8/ZmViMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjL3BhZ2VzL2FwaS9tb2RlbHMvZ2VuZXJhdGUudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9tb2RlbHMvZ2VuZXJhdGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9tb2RlbHMvZ2VuZXJhdGVcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmodels%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmodels%2Fgenerate.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/lib/template-engine.ts":
/*!************************************!*\
  !*** ./src/lib/template-engine.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TemplateEngine: () => (/* binding */ TemplateEngine)\n/* harmony export */ });\nclass TemplateEngine {\n    constructor(){\n        this.templates = new Map();\n        this.initializeTemplates();\n    }\n    static getInstance() {\n        if (!TemplateEngine.instance) {\n            TemplateEngine.instance = new TemplateEngine();\n        }\n        return TemplateEngine.instance;\n    }\n    getTemplate(businessType) {\n        return this.templates.get(businessType) || this.templates.get(\"default\");\n    }\n    applyTemplate(template, inputs) {\n        // Apply template formulas and generate model\n        const processedInputs = this.processInputs(template, inputs);\n        const schedules = this.calculateSchedules(template, processedInputs);\n        const statements = this.generateStatements(template, processedInputs, schedules);\n        return {\n            id: `model_${Date.now()}`,\n            financialInputsId: inputs.id || \"temp\",\n            ...statements,\n            schedules: schedules,\n            scenarios: this.generateScenarios(template, statements),\n            auditChecks: this.generateAuditChecks(template, statements),\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n    }\n    processInputs(template, inputs) {\n        const processed = {};\n        for (const inputDef of template.schema.inputs){\n            const value = inputs[inputDef.id] ?? inputDef.default;\n            // Apply validation\n            const validationResult = this.validateInput(inputDef, value);\n            if (!validationResult.isValid) {\n                throw new Error(`Validation failed for ${inputDef.id}: ${validationResult.errors.join(\", \")}`);\n            }\n            processed[inputDef.id] = value;\n        }\n        return processed;\n    }\n    validateInput(inputDef, value) {\n        const errors = [];\n        if (inputDef.required && (value === undefined || value === null || value === \"\")) {\n            errors.push(`${inputDef.name} is required`);\n        }\n        if (inputDef.validation) {\n            for (const rule of inputDef.validation){\n                if (!this.evaluateValidationRule(rule, value)) {\n                    errors.push(rule.message);\n                }\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    evaluateValidationRule(rule, value) {\n        switch(rule.type){\n            case \"range\":\n                const [min, max] = rule.condition.split(\",\").map(Number);\n                return value >= min && value <= max;\n            case \"required\":\n                return value !== undefined && value !== null && value !== \"\";\n            case \"custom\":\n                // Custom validation logic would go here\n                return true;\n            default:\n                return true;\n        }\n    }\n    calculateSchedules(template, inputs) {\n        const schedules = {};\n        for (const scheduleDef of template.schema.schedules){\n            schedules[scheduleDef.id] = this.calculateSchedule(scheduleDef, inputs);\n        }\n        return schedules;\n    }\n    calculateSchedule(scheduleDef, inputs) {\n        const schedule = {};\n        const periods = 60; // 5 years monthly\n        for (const step of scheduleDef.calculations){\n            schedule[step.id] = this.evaluateFormula(step.formula, inputs, schedule, periods);\n        }\n        return schedule;\n    }\n    evaluateFormula(formula, inputs, schedules, periods) {\n        // Simple formula evaluation - in production, you'd use a proper expression parser\n        const result = new Array(periods).fill(0);\n        // Replace placeholders with actual values\n        let processedFormula = formula;\n        // Handle basic arithmetic operations\n        if (formula.includes(\"revenue_growth\")) {\n            const growthRate = inputs.revenue_growth_rate || 0;\n            for(let i = 0; i < periods; i++){\n                result[i] = Math.pow(1 + growthRate / 12, i);\n            }\n        } else if (formula.includes(\"depreciation\")) {\n            const assetValue = inputs.initial_assets || 0;\n            const depreciationRate = inputs.depreciation_rate || 0.1;\n            for(let i = 0; i < periods; i++){\n                result[i] = assetValue * (depreciationRate / 12);\n            }\n        } else if (formula.includes(\"interest\")) {\n            const debtAmount = inputs.initial_debt || 0;\n            const interestRate = inputs.interest_rate || 0.05;\n            for(let i = 0; i < periods; i++){\n                result[i] = debtAmount * (interestRate / 12);\n            }\n        }\n        return result;\n    }\n    generateStatements(template, inputs, schedules) {\n        const periods = 60;\n        // Generate income statement\n        const incomeStatement = this.generateIncomeStatement(template, inputs, schedules, periods);\n        // Generate balance sheet\n        const balanceSheet = this.generateBalanceSheet(template, inputs, schedules, incomeStatement, periods);\n        // Generate cash flow statement\n        const cashFlowStatement = this.generateCashFlowStatement(template, inputs, schedules, incomeStatement, balanceSheet, periods);\n        return {\n            incomeStatement,\n            balanceSheet,\n            cashFlowStatement\n        };\n    }\n    generateIncomeStatement(template, inputs, schedules, periods) {\n        const revenue = this.calculateRevenue(inputs, periods);\n        const costOfGoodsSold = this.calculateCostOfGoodsSold(inputs, revenue);\n        const grossProfit = revenue.map((r, i)=>r - costOfGoodsSold[i]);\n        const operatingExpenses = {\n            salesAndMarketing: this.calculateOperatingExpense(inputs.sales_marketing_budget || 0, revenue),\n            researchAndDevelopment: this.calculateOperatingExpense(inputs.research_development_budget || 0, revenue),\n            generalAndAdministrative: this.calculateOperatingExpense(inputs.general_administrative_budget || 0, revenue)\n        };\n        const totalOperatingExpenses = revenue.map((_, i)=>operatingExpenses.salesAndMarketing[i] + operatingExpenses.researchAndDevelopment[i] + operatingExpenses.generalAndAdministrative[i]);\n        const operatingIncome = grossProfit.map((gp, i)=>gp - totalOperatingExpenses[i]);\n        const interestExpense = schedules.debt?.interestPayments || new Array(periods).fill(0);\n        const taxes = operatingIncome.map((oi, i)=>Math.max(0, oi - interestExpense[i]) * (inputs.tax_rate || 0.25));\n        const netIncome = operatingIncome.map((oi, i)=>oi - interestExpense[i] - taxes[i]);\n        return {\n            periods,\n            revenue,\n            costOfGoodsSold,\n            grossProfit,\n            operatingExpenses,\n            operatingIncome,\n            interestExpense,\n            taxes,\n            netIncome\n        };\n    }\n    generateBalanceSheet(template, inputs, schedules, incomeStatement, periods) {\n        const cash = this.calculateCashBalance(incomeStatement, periods);\n        const accountsReceivable = schedules.workingCapital?.accountsReceivable || new Array(periods).fill(0);\n        const inventory = schedules.workingCapital?.inventory || new Array(periods).fill(0);\n        const fixedAssets = schedules.depreciation?.endingBalance || new Array(periods).fill(0);\n        const accumulatedDepreciation = schedules.depreciation?.accumulatedDepreciation || new Array(periods).fill(0);\n        const totalAssets = cash.map((c, i)=>c + accountsReceivable[i] + inventory[i] + fixedAssets[i] - accumulatedDepreciation[i]);\n        const accountsPayable = schedules.workingCapital?.accountsPayable || new Array(periods).fill(0);\n        const debt = schedules.debt?.endingBalance || new Array(periods).fill(0);\n        const totalLiabilities = accountsPayable.map((ap, i)=>ap + debt[i]);\n        const commonStock = new Array(periods).fill(inputs.initial_equity || 100000);\n        const retainedEarnings = this.calculateRetainedEarnings(incomeStatement);\n        const totalEquity = commonStock.map((cs, i)=>cs + retainedEarnings[i]);\n        return {\n            periods,\n            assets: {\n                cash,\n                accountsReceivable,\n                inventory,\n                fixedAssets,\n                accumulatedDepreciation,\n                totalAssets\n            },\n            liabilities: {\n                accountsPayable,\n                debt,\n                totalLiabilities\n            },\n            equity: {\n                commonStock,\n                retainedEarnings,\n                totalEquity\n            }\n        };\n    }\n    generateCashFlowStatement(template, inputs, schedules, incomeStatement, balanceSheet, periods) {\n        const operatingCashFlow = incomeStatement.netIncome.map((ni, i)=>ni + (schedules.depreciation?.depreciation[i] || 0) - (schedules.workingCapital?.changeInWorkingCapital[i] || 0));\n        const investingCashFlow = schedules.depreciation?.additions.map((add)=>-add) || new Array(periods).fill(0);\n        const financingCashFlow = schedules.debt?.netCashFlow || new Array(periods).fill(0);\n        const netCashFlow = operatingCashFlow.map((ocf, i)=>ocf + investingCashFlow[i] + financingCashFlow[i]);\n        const endingCash = this.calculateEndingCash(netCashFlow);\n        return {\n            periods,\n            operatingCashFlow,\n            investingCashFlow,\n            financingCashFlow,\n            netCashFlow,\n            endingCash\n        };\n    }\n    generateScenarios(template, statements) {\n        // Generate base, optimistic, and pessimistic scenarios\n        return [\n            {\n                id: \"base\",\n                name: \"Base Case\",\n                description: \"Base case scenario with current assumptions\",\n                type: \"base\",\n                assumptions: {},\n                results: this.calculateScenarioResults(statements)\n            }\n        ];\n    }\n    generateAuditChecks(template, statements) {\n        // Generate audit checks based on template validation rules\n        if (!template.validation || template.validation.length === 0) {\n            return [];\n        }\n        return template.validation.map((rule)=>({\n                id: rule.field,\n                name: rule.field,\n                description: rule.message,\n                status: \"pass\",\n                message: \"Validation passed\",\n                value: 0,\n                threshold: 0\n            }));\n    }\n    // Helper methods\n    calculateRevenue(inputs, periods) {\n        const revenue = new Array(periods).fill(0);\n        let currentRevenue = inputs.initial_revenue || 100000;\n        for(let i = 0; i < periods; i++){\n            revenue[i] = currentRevenue;\n            const growthRate = inputs.revenue_growth_rate || 0;\n            currentRevenue *= 1 + growthRate / 12;\n        }\n        return revenue;\n    }\n    calculateCostOfGoodsSold(inputs, revenue) {\n        const cogsPercentage = inputs.cogs_percentage || 0.6;\n        return revenue.map((r)=>r * cogsPercentage);\n    }\n    calculateOperatingExpense(budgetPercentage, revenue) {\n        return revenue.map((r)=>r * (budgetPercentage / 100));\n    }\n    calculateCashBalance(incomeStatement, periods) {\n        const cash = new Array(periods).fill(0);\n        let currentCash = 50000;\n        for(let i = 0; i < periods; i++){\n            cash[i] = currentCash;\n            currentCash += incomeStatement.netIncome[i];\n        }\n        return cash;\n    }\n    calculateRetainedEarnings(incomeStatement) {\n        const retainedEarnings = new Array(incomeStatement.periods).fill(0);\n        let currentRE = 0;\n        for(let i = 0; i < incomeStatement.periods; i++){\n            currentRE += incomeStatement.netIncome[i];\n            retainedEarnings[i] = currentRE;\n        }\n        return retainedEarnings;\n    }\n    calculateEndingCash(netCashFlow) {\n        const endingCash = new Array(netCashFlow.length).fill(0);\n        let currentCash = 50000;\n        for(let i = 0; i < netCashFlow.length; i++){\n            currentCash += netCashFlow[i];\n            endingCash[i] = currentCash;\n        }\n        return endingCash;\n    }\n    calculateScenarioResults(statements) {\n        return {\n            npv: 0,\n            irr: 0,\n            paybackPeriod: 0,\n            keyMetrics: {}\n        };\n    }\n    initializeTemplates() {\n        // SaaS Template\n        this.templates.set(\"saas\", {\n            id: \"saas\",\n            name: \"SaaS Financial Model\",\n            description: \"Template for Software-as-a-Service businesses\",\n            businessTypes: [\n                \"saas\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"initial_mrr\",\n                        name: \"Initial Monthly Recurring Revenue\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Starting MRR for the model\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"revenue_growth_rate\",\n                        name: \"Monthly Revenue Growth Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.05,\n                        description: \"Monthly growth rate for revenue\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"revenue_growth_rate\",\n                                condition: \"0,0.5\",\n                                message: \"Growth rate must be between 0% and 50%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"churn_rate\",\n                        name: \"Monthly Churn Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.02,\n                        description: \"Monthly customer churn rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"churn_rate\",\n                                condition: \"0,0.2\",\n                                message: \"Churn rate must be between 0% and 20%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"gross_margin\",\n                        name: \"Gross Margin\",\n                        type: \"percentage\",\n                        category: \"cogs\",\n                        required: true,\n                        default: 0.8,\n                        description: \"Gross margin percentage\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"gross_margin\",\n                                condition: \"0,1\",\n                                message: \"Gross margin must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"sales_marketing_budget\",\n                        name: \"Sales & Marketing Budget\",\n                        type: \"percentage\",\n                        category: \"opex\",\n                        required: true,\n                        default: 0.3,\n                        description: \"Sales and marketing as percentage of revenue\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"sales_marketing_budget\",\n                                condition: \"0,1\",\n                                message: \"Budget must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"research_development_budget\",\n                        name: \"R&D Budget\",\n                        type: \"percentage\",\n                        category: \"opex\",\n                        required: true,\n                        default: 0.15,\n                        description: \"Research and development as percentage of revenue\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"research_development_budget\",\n                                condition: \"0,1\",\n                                message: \"Budget must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"tax_rate\",\n                        name: \"Effective Tax Rate\",\n                        type: \"percentage\",\n                        category: \"tax\",\n                        required: true,\n                        default: 0.25,\n                        description: \"Effective corporate tax rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"tax_rate\",\n                                condition: \"0,0.5\",\n                                message: \"Tax rate must be between 0% and 50%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    }\n                ],\n                outputs: [\n                    {\n                        id: \"revenue\",\n                        name: \"Revenue\",\n                        type: \"line_item\",\n                        category: \"income_statement\",\n                        formula: \"initial_mrr * (1 + revenue_growth_rate)^period - churn_rate\",\n                        description: \"Monthly recurring revenue\"\n                    },\n                    {\n                        id: \"gross_profit\",\n                        name: \"Gross Profit\",\n                        type: \"line_item\",\n                        category: \"income_statement\",\n                        formula: \"revenue * gross_margin\",\n                        description: \"Gross profit after cost of goods sold\"\n                    }\n                ],\n                schedules: [\n                    {\n                        id: \"revenue_schedule\",\n                        name: \"Revenue Schedule\",\n                        type: \"custom\",\n                        inputs: [\n                            \"initial_mrr\",\n                            \"revenue_growth_rate\",\n                            \"churn_rate\"\n                        ],\n                        outputs: [\n                            \"monthly_revenue\",\n                            \"annual_revenue\"\n                        ],\n                        calculations: [\n                            {\n                                id: \"monthly_revenue\",\n                                description: \"Calculate monthly revenue\",\n                                formula: \"initial_mrr * (1 + revenue_growth_rate)^period * (1 - churn_rate)^period\",\n                                dependencies: [\n                                    \"initial_mrr\",\n                                    \"revenue_growth_rate\",\n                                    \"churn_rate\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            formulas: [\n                {\n                    id: \"revenue_formula\",\n                    name: \"Revenue Formula\",\n                    formula: \"initial_mrr * (1 + revenue_growth_rate)^period * (1 - churn_rate)^period\",\n                    description: \"SaaS revenue calculation with growth and churn\",\n                    category: \"revenue\",\n                    dependencies: [\n                        \"initial_mrr\",\n                        \"revenue_growth_rate\",\n                        \"churn_rate\"\n                    ]\n                }\n            ],\n            sheets: [\n                {\n                    id: \"inputs\",\n                    name: \"Inputs\",\n                    type: \"input\",\n                    layout: [\n                        {\n                            row: 1,\n                            col: 1,\n                            value: \"SaaS Financial Model Inputs\",\n                            type: \"label\"\n                        },\n                        {\n                            row: 3,\n                            col: 1,\n                            value: \"Initial MRR\",\n                            type: \"label\"\n                        },\n                        {\n                            row: 3,\n                            col: 2,\n                            value: \"initial_mrr\",\n                            type: \"input\",\n                            reference: \"B3\"\n                        },\n                        {\n                            row: 4,\n                            col: 1,\n                            value: \"Revenue Growth Rate\",\n                            type: \"label\"\n                        },\n                        {\n                            row: 4,\n                            col: 2,\n                            value: \"revenue_growth_rate\",\n                            type: \"input\",\n                            reference: \"B4\"\n                        }\n                    ],\n                    formulas: [],\n                    formatting: [\n                        {\n                            range: \"B3:B4\",\n                            type: \"number\",\n                            format: \"#,##0.00\",\n                            conditional: []\n                        }\n                    ]\n                }\n            ],\n            validation: [\n                {\n                    type: \"range\",\n                    field: \"revenue_growth_rate\",\n                    condition: \"0,0.5\",\n                    message: \"Revenue growth rate must be between 0% and 50%\",\n                    severity: \"error\"\n                }\n            ]\n        });\n        // E-commerce Template\n        this.templates.set(\"ecommerce\", {\n            id: \"ecommerce\",\n            name: \"E-commerce Financial Model\",\n            description: \"Template for E-commerce and subscription businesses\",\n            businessTypes: [\n                \"ecommerce\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"starting_customers\",\n                        name: \"Starting Customers\",\n                        type: \"number\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Initial number of customers\",\n                        unit: \"customers\"\n                    },\n                    {\n                        id: \"new_customers_per_month\",\n                        name: \"New Customers per Month\",\n                        type: \"number\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 10,\n                        description: \"Monthly customer acquisition rate\",\n                        unit: \"customers/month\"\n                    },\n                    {\n                        id: \"churn_rate\",\n                        name: \"Monthly Churn Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.05,\n                        description: \"Monthly customer churn rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"churn_rate\",\n                                condition: \"0,0.3\",\n                                message: \"Churn rate must be between 0% and 30%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"price_per_customer\",\n                        name: \"Price per Customer\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Average revenue per customer per month\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"cogs_per_customer\",\n                        name: \"COGS per Customer\",\n                        type: \"currency\",\n                        category: \"cogs\",\n                        required: true,\n                        description: \"Cost of goods sold per customer per month\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"opex_per_month\",\n                        name: \"Fixed Operating Expenses\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        default: 5000,\n                        description: \"Fixed monthly operating expenses\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"initial_cash\",\n                        name: \"Initial Cash\",\n                        type: \"currency\",\n                        category: \"financing\",\n                        required: true,\n                        default: 50000,\n                        description: \"Starting cash balance\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: [\n                    {\n                        id: \"customer_schedule\",\n                        name: \"Customer Schedule\",\n                        type: \"custom\",\n                        inputs: [\n                            \"starting_customers\",\n                            \"new_customers_per_month\",\n                            \"churn_rate\"\n                        ],\n                        outputs: [\n                            \"total_customers\",\n                            \"revenue\"\n                        ],\n                        calculations: [\n                            {\n                                id: \"total_customers\",\n                                description: \"Calculate total customers over time\",\n                                formula: \"starting_customers + (new_customers_per_month * period) - (starting_customers * churn_rate * period)\",\n                                dependencies: [\n                                    \"starting_customers\",\n                                    \"new_customers_per_month\",\n                                    \"churn_rate\"\n                                ]\n                            },\n                            {\n                                id: \"revenue\",\n                                description: \"Calculate monthly revenue\",\n                                formula: \"total_customers * price_per_customer\",\n                                dependencies: [\n                                    \"total_customers\",\n                                    \"price_per_customer\"\n                                ]\n                            }\n                        ]\n                    }\n                ]\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Marketplace Template\n        this.templates.set(\"marketplace\", {\n            id: \"marketplace\",\n            name: \"Marketplace Financial Model\",\n            description: \"Template for marketplace and platform businesses\",\n            businessTypes: [\n                \"marketplace\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"gmv\",\n                        name: \"Gross Merchandise Value\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Total value of transactions on platform\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"take_rate\",\n                        name: \"Take Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.15,\n                        description: \"Platform commission rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"take_rate\",\n                                condition: \"0,0.5\",\n                                message: \"Take rate must be between 0% and 50%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"transaction_volume\",\n                        name: \"Monthly Transaction Volume\",\n                        type: \"number\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Number of transactions per month\",\n                        unit: \"transactions\"\n                    },\n                    {\n                        id: \"average_order_value\",\n                        name: \"Average Order Value\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Average value per transaction\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"customer_acquisition_cost\",\n                        name: \"Customer Acquisition Cost\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Cost to acquire new customers\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"operating_expenses\",\n                        name: \"Operating Expenses\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        default: 10000,\n                        description: \"Monthly operating expenses\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Services Template\n        this.templates.set(\"services\", {\n            id: \"services\",\n            name: \"Services Financial Model\",\n            description: \"Template for consulting and professional services\",\n            businessTypes: [\n                \"services\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"billable_hours\",\n                        name: \"Billable Hours per Month\",\n                        type: \"number\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Total billable hours per month\",\n                        unit: \"hours\"\n                    },\n                    {\n                        id: \"hourly_rate\",\n                        name: \"Average Hourly Rate\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Average billing rate per hour\",\n                        unit: \"USD/hour\"\n                    },\n                    {\n                        id: \"utilization_rate\",\n                        name: \"Utilization Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.75,\n                        description: \"Percentage of time spent on billable work\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"utilization_rate\",\n                                condition: \"0,1\",\n                                message: \"Utilization rate must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"team_size\",\n                        name: \"Team Size\",\n                        type: \"number\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Number of team members\",\n                        unit: \"people\"\n                    },\n                    {\n                        id: \"average_salary\",\n                        name: \"Average Salary\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Average salary per team member\",\n                        unit: \"USD/year\"\n                    },\n                    {\n                        id: \"other_expenses\",\n                        name: \"Other Operating Expenses\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        default: 5000,\n                        description: \"Other monthly operating expenses\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Hardware Template\n        this.templates.set(\"hardware\", {\n            id: \"hardware\",\n            name: \"Hardware Financial Model\",\n            description: \"Template for hardware and physical product businesses\",\n            businessTypes: [\n                \"hardware\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"units_sold\",\n                        name: \"Units Sold per Month\",\n                        type: \"number\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Number of units sold per month\",\n                        unit: \"units\"\n                    },\n                    {\n                        id: \"unit_price\",\n                        name: \"Unit Price\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Selling price per unit\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"unit_cost\",\n                        name: \"Unit Cost\",\n                        type: \"currency\",\n                        category: \"cogs\",\n                        required: true,\n                        description: \"Cost to manufacture per unit\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"inventory_turnover\",\n                        name: \"Inventory Turnover\",\n                        type: \"number\",\n                        category: \"working_capital\",\n                        required: true,\n                        default: 4,\n                        description: \"Number of times inventory is sold per year\",\n                        unit: \"times/year\"\n                    },\n                    {\n                        id: \"manufacturing_capacity\",\n                        name: \"Manufacturing Capacity\",\n                        type: \"number\",\n                        category: \"capex\",\n                        required: true,\n                        description: \"Maximum units that can be produced per month\",\n                        unit: \"units/month\"\n                    },\n                    {\n                        id: \"fixed_costs\",\n                        name: \"Fixed Manufacturing Costs\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Fixed monthly manufacturing costs\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Manufacturing Template\n        this.templates.set(\"manufacturing\", {\n            id: \"manufacturing\",\n            name: \"Manufacturing Financial Model\",\n            description: \"Template for manufacturing businesses\",\n            businessTypes: [\n                \"manufacturing\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"production_capacity\",\n                        name: \"Production Capacity\",\n                        type: \"number\",\n                        category: \"capex\",\n                        required: true,\n                        description: \"Maximum production capacity per month\",\n                        unit: \"units/month\"\n                    },\n                    {\n                        id: \"capacity_utilization\",\n                        name: \"Capacity Utilization\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.8,\n                        description: \"Percentage of capacity being utilized\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"capacity_utilization\",\n                                condition: \"0,1\",\n                                message: \"Capacity utilization must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"unit_price\",\n                        name: \"Unit Selling Price\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Selling price per unit\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"variable_cost_per_unit\",\n                        name: \"Variable Cost per Unit\",\n                        type: \"currency\",\n                        category: \"cogs\",\n                        required: true,\n                        description: \"Variable cost per unit produced\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"fixed_manufacturing_costs\",\n                        name: \"Fixed Manufacturing Costs\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Fixed monthly manufacturing costs\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"equipment_depreciation\",\n                        name: \"Equipment Depreciation\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        default: 5000,\n                        description: \"Monthly equipment depreciation\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Real Estate Template\n        this.templates.set(\"real_estate\", {\n            id: \"real_estate\",\n            name: \"Real Estate Financial Model\",\n            description: \"Template for real estate investment and development\",\n            businessTypes: [\n                \"real_estate\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"property_value\",\n                        name: \"Property Value\",\n                        type: \"currency\",\n                        category: \"capex\",\n                        required: true,\n                        description: \"Total property value\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"rental_income\",\n                        name: \"Monthly Rental Income\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Monthly rental income\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"occupancy_rate\",\n                        name: \"Occupancy Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.95,\n                        description: \"Property occupancy rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"occupancy_rate\",\n                                condition: \"0,1\",\n                                message: \"Occupancy rate must be between 0% and 100%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"operating_expenses\",\n                        name: \"Operating Expenses\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Monthly property operating expenses\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"mortgage_payment\",\n                        name: \"Monthly Mortgage Payment\",\n                        type: \"currency\",\n                        category: \"financing\",\n                        required: true,\n                        description: \"Monthly mortgage payment\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"property_taxes\",\n                        name: \"Property Taxes\",\n                        type: \"currency\",\n                        category: \"tax\",\n                        required: true,\n                        description: \"Annual property taxes\",\n                        unit: \"USD/year\"\n                    },\n                    {\n                        id: \"appreciation_rate\",\n                        name: \"Property Appreciation Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.03,\n                        description: \"Annual property appreciation rate\",\n                        unit: \"%/year\"\n                    }\n                ],\n                outputs: [],\n                schedules: [],\n                formulas: [],\n                sheets: [],\n                validation: []\n            }\n        });\n        // Financial Template\n        this.templates.set(\"financial\", {\n            id: \"financial\",\n            name: \"Financial Services Model\",\n            description: \"Template for financial services and fintech businesses\",\n            businessTypes: [\n                \"financial\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"assets_under_management\",\n                        name: \"Assets Under Management\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Total assets under management\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"management_fee\",\n                        name: \"Management Fee Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.01,\n                        description: \"Annual management fee rate\",\n                        validation: [\n                            {\n                                type: \"range\",\n                                field: \"management_fee\",\n                                condition: \"0,0.05\",\n                                message: \"Management fee must be between 0% and 5%\",\n                                severity: \"error\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"transaction_volume\",\n                        name: \"Transaction Volume\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Monthly transaction volume\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"transaction_fee\",\n                        name: \"Transaction Fee Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.0025,\n                        description: \"Transaction fee rate\",\n                        unit: \"%\"\n                    },\n                    {\n                        id: \"operating_expenses\",\n                        name: \"Operating Expenses\",\n                        type: \"currency\",\n                        category: \"opex\",\n                        required: true,\n                        description: \"Monthly operating expenses\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"regulatory_capital\",\n                        name: \"Regulatory Capital\",\n                        type: \"currency\",\n                        category: \"financing\",\n                        required: true,\n                        description: \"Required regulatory capital\",\n                        unit: \"USD\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n        // Default Template\n        this.templates.set(\"default\", {\n            id: \"default\",\n            name: \"Default Financial Model\",\n            description: \"Generic financial model template\",\n            businessTypes: [\n                \"default\"\n            ],\n            version: \"1.0\",\n            schema: {\n                inputs: [\n                    {\n                        id: \"initial_revenue\",\n                        name: \"Initial Revenue\",\n                        type: \"currency\",\n                        category: \"revenue\",\n                        required: true,\n                        description: \"Starting revenue for the model\",\n                        unit: \"USD\"\n                    },\n                    {\n                        id: \"revenue_growth_rate\",\n                        name: \"Revenue Growth Rate\",\n                        type: \"percentage\",\n                        category: \"revenue\",\n                        required: true,\n                        default: 0.05,\n                        description: \"Monthly growth rate for revenue\"\n                    }\n                ],\n                outputs: [],\n                schedules: []\n            },\n            formulas: [],\n            sheets: [],\n            validation: []\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/template-engine.ts\n");

/***/ }),

/***/ "(api)/./src/pages/api/models/generate.ts":
/*!******************************************!*\
  !*** ./src/pages/api/models/generate.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_template_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/template-engine */ \"(api)/./src/lib/template-engine.ts\");\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            success: false,\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { businessType, inputs } = req.body;\n        if (!businessType || !inputs) {\n            return res.status(400).json({\n                success: false,\n                error: \"Business type and inputs are required\"\n            });\n        }\n        const templateEngine = _lib_template_engine__WEBPACK_IMPORTED_MODULE_0__.TemplateEngine.getInstance();\n        const template = templateEngine.getTemplate(businessType);\n        const financialModel = templateEngine.applyTemplate(template, inputs);\n        return res.status(200).json({\n            success: true,\n            data: financialModel\n        });\n    } catch (error) {\n        console.error(\"Error generating financial model:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Failed to generate financial model\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL21vZGVscy9nZW5lcmF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUN1RDtBQUl4QyxlQUFlQyxRQUM1QkMsR0FBbUIsRUFDbkJDLEdBQWlEO0lBRWpELElBQUlELElBQUlFLE1BQU0sS0FBSyxRQUFRO1FBQ3pCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVEMsT0FBTztRQUNUO0lBQ0Y7SUFFQSxJQUFJO1FBQ0YsTUFBTSxFQUFFQyxZQUFZLEVBQUVDLE1BQU0sRUFBRSxHQUFHUixJQUFJUyxJQUFJO1FBRXpDLElBQUksQ0FBQ0YsZ0JBQWdCLENBQUNDLFFBQVE7WUFDNUIsT0FBT1AsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtRQUNGO1FBRUEsTUFBTUksaUJBQWlCWixnRUFBY0EsQ0FBQ2EsV0FBVztRQUNqRCxNQUFNQyxXQUFXRixlQUFlRyxXQUFXLENBQUNOO1FBRTVDLE1BQU1PLGlCQUFpQkosZUFBZUssYUFBYSxDQUFDSCxVQUFVSjtRQUU5RCxPQUFPUCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RXLE1BQU1GO1FBQ1I7SUFDRixFQUFFLE9BQU9SLE9BQU87UUFDZFcsUUFBUVgsS0FBSyxDQUFDLHFDQUFxQ0E7UUFDbkQsT0FBT0wsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlubW9kLWFpLXBsYXRmb3JtLy4vc3JjL3BhZ2VzL2FwaS9tb2RlbHMvZ2VuZXJhdGUudHM/MjcxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XG5pbXBvcnQgeyBUZW1wbGF0ZUVuZ2luZSB9IGZyb20gJ0AvbGliL3RlbXBsYXRlLWVuZ2luZSc7XG5pbXBvcnQgeyBGaW5hbmNpYWxNb2RlbGluZ0VuZ2luZSB9IGZyb20gJ0AvbGliL2ZpbmFuY2lhbC1tb2RlbGluZy1lbmdpbmUnO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2UsIEZpbmFuY2lhbE1vZGVsIH0gZnJvbSAnQC90eXBlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIoXG4gIHJlcTogTmV4dEFwaVJlcXVlc3QsXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPEFwaVJlc3BvbnNlPEZpbmFuY2lhbE1vZGVsPj5cbikge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnXG4gICAgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgYnVzaW5lc3NUeXBlLCBpbnB1dHMgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKCFidXNpbmVzc1R5cGUgfHwgIWlucHV0cykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnQnVzaW5lc3MgdHlwZSBhbmQgaW5wdXRzIGFyZSByZXF1aXJlZCdcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHRlbXBsYXRlRW5naW5lID0gVGVtcGxhdGVFbmdpbmUuZ2V0SW5zdGFuY2UoKTtcbiAgICBjb25zdCB0ZW1wbGF0ZSA9IHRlbXBsYXRlRW5naW5lLmdldFRlbXBsYXRlKGJ1c2luZXNzVHlwZSk7XG4gICAgXG4gICAgY29uc3QgZmluYW5jaWFsTW9kZWwgPSB0ZW1wbGF0ZUVuZ2luZS5hcHBseVRlbXBsYXRlKHRlbXBsYXRlLCBpbnB1dHMpO1xuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBmaW5hbmNpYWxNb2RlbFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdlbmVyYXRpbmcgZmluYW5jaWFsIG1vZGVsOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogJ0ZhaWxlZCB0byBnZW5lcmF0ZSBmaW5hbmNpYWwgbW9kZWwnXG4gICAgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJUZW1wbGF0ZUVuZ2luZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwiYnVzaW5lc3NUeXBlIiwiaW5wdXRzIiwiYm9keSIsInRlbXBsYXRlRW5naW5lIiwiZ2V0SW5zdGFuY2UiLCJ0ZW1wbGF0ZSIsImdldFRlbXBsYXRlIiwiZmluYW5jaWFsTW9kZWwiLCJhcHBseVRlbXBsYXRlIiwiZGF0YSIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/models/generate.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmodels%2Fgenerate&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmodels%2Fgenerate.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();